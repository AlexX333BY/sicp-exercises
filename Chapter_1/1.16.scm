(define (fast-expt b n)
  (define (fast-expt-iter b n a)
    (define (square n)
      (* n n))
    (cond ((= n 0) 1)
          ((= n 1) (* b a))
          ((even? n) (fast-expt-iter (square b) (/ n 2) a))
          (else (fast-expt-iter (square b) (quotient n 2) (* a b)))))
  (if (or (= b 0) (= b 1))
      b
      (fast-expt-iter b n 1)))
